#!/usr/bin/env python3
"""
Script para probar la conexi√≥n a la base de datos
"""

import sys
import os

# Agregar el directorio actual al path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy import text
from database.database import engine, SessionLocal
from config.settings import settings

def test_connection():
    """Prueba la conexi√≥n a la base de datos"""
    print("üîç Probando conexi√≥n a la base de datos...")
    print(f"URL: {settings.DATABASE_URL}")
    
    try:
        # Probar conexi√≥n b√°sica
        with engine.connect() as connection:
            print("‚úÖ Conexi√≥n b√°sica exitosa")
            
            # Probar consulta simple
            result = connection.execute(text("SELECT 1"))
            print("‚úÖ Consulta de prueba exitosa")
            
            # Obtener informaci√≥n de la base de datos
            result = connection.execute(text("SELECT version()"))
            version = result.fetchone()[0]
            print(f"‚úÖ Versi√≥n de PostgreSQL: {version}")
            
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        print("\nüîß Posibles soluciones:")
        print("1. Verifica que las credenciales sean correctas")
        print("2. Aseg√∫rate de que el proyecto de Supabase est√© activo")
        print("3. Verifica que la IP est√© en la lista blanca de Supabase")
        print("4. Revisa la documentaci√≥n de Supabase para obtener las credenciales correctas")
        return False
    
    return True

def test_session():
    """Prueba la creaci√≥n de sesiones"""
    print("\nüîç Probando creaci√≥n de sesiones...")
    
    try:
        db = SessionLocal()
        print("‚úÖ Sesi√≥n creada exitosamente")
        
        # Probar consulta con sesi√≥n
        result = db.execute(text("SELECT current_database()"))
        db_name = result.fetchone()[0]
        print(f"‚úÖ Base de datos actual: {db_name}")
        
        db.close()
        print("‚úÖ Sesi√≥n cerrada correctamente")
        
    except Exception as e:
        print(f"‚ùå Error con sesi√≥n: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("=" * 50)
    print("DIAGN√ìSTICO DE CONEXI√ìN A BASE DE DATOS")
    print("=" * 50)
    
    # Probar conexi√≥n
    connection_ok = test_connection()
    
    if connection_ok:
        # Probar sesiones
        session_ok = test_session()
        
        if session_ok:
            print("\nüéâ ¬°Todas las pruebas pasaron! La base de datos est√° configurada correctamente.")
        else:
            print("\n‚ö†Ô∏è Hay problemas con las sesiones de la base de datos.")
    else:
        print("\n‚ùå No se pudo conectar a la base de datos.")
    
    print("\n" + "=" * 50) 